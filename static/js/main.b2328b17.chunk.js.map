{"version":3,"sources":["store/store.js","PopupItem.js","PopupCustom.js","ProductItem.js","Products.js","App.js","reportWebVitals.js","index.js"],"names":["useStore","create","set","get","products","populateProducts","a","url","test","window","location","href","EcwidApp","getPayload","store_id","access_token","axios","data","getProductById","id","items","filter","e","parseInt","upsellProducts","Promise","resolve","reject","getAppPublicConfig","value","_data","JSON","parse","console","log","addUpsellProduct","parentID","bundleID","bundleProducts","_parentProduct","length","parentProduct","parent","bundleProduct","existingBundles","_existing","bundle","Symbol","iterator","Object","currentProduct","Set","sanitizedBundleProducts","sanitizeBundleProducts","updated","setAppPublicConfig","stringify","err","error","getUpsellProductById","upsell","deleteUpsellProductById","find","updatedBundle","getCurrentPopupProduct","undefined","setCurrentPopupProduct","PopupItem","product","state","currentProductID","useState","isAddable","setIsAddable","useEffect","_","className","src","thumbnailUrl","alt","name","disabled","onClick","type","xmlns","viewBox","focusable","d","PopupCustom","map","ProductItem","setUpsell","populateUpsells","handlePopulateUpsell","subscription","current","subscribe","_product","event","preventDefault","width","height","modal","onOpen","trigger","position","Products","props","previousupsellProducts","ProductSkeleton","Fragment","count","hasOwnProperty","App","storeData","setStoreData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2328b17.chunk.js","sourcesContent":["import create from \"zustand\";\r\nimport axios from \"axios\";\r\n\r\nconst useStore = create((set, get) => ({\r\n  /* ## API PRODUCTS\r\n  ==================================== */\r\n  products: [],\r\n\r\n  /* ===============\r\n  Get store's products and populate the store's 'products' variable */\r\n  populateProducts: async () => {\r\n    /* TODO = change this URL when on production */\r\n\r\n    const url = /localhost/.test(window.location.href)\r\n      ? `https://app.ecwid.com/api/v3/37374877/products?token=secret_EkQGe8SC4V4DHgSrnkmXsQsneDQ9JwQ4`\r\n      : `https://app.ecwid.com/api/v3/${\r\n          window.EcwidApp.getPayload().store_id\r\n        }/products?token=${window.EcwidApp.getPayload().access_token}`;\r\n\r\n    const { data: products } = await axios.get(url);\r\n\r\n    set({\r\n      products,\r\n    });\r\n  },\r\n\r\n  /* Get a product from the customer's catalog by ID API  */\r\n  getProductById: (id) => {\r\n    return get().products.items.filter((e) => e.id === parseInt(id))[0];\r\n  },\r\n\r\n  /* ## UPSELL PRODUCTS\r\n  ==================================== */\r\n\r\n  /* Get Bundle products that will show up at the front-end. */\r\n  upsellProducts: () => {\r\n    if (window.EcwidApp && window.EcwidApp.getPayload()) {\r\n      return new Promise(async (resolve, reject) => {\r\n        let data = [];\r\n        window.EcwidApp.getAppPublicConfig(function (value) {\r\n          const _data = JSON.parse(value);\r\n          data = data = _data.upsellProducts;\r\n          console.log(\"xxx ECWID DB DATA\", data);\r\n          resolve(data);\r\n        });\r\n      });\r\n    }\r\n\r\n    return [];\r\n  },\r\n\r\n  /* Adds a product to the upsell */\r\n  addUpsellProduct: async (parentID, bundleID) => {\r\n    let bundle;\r\n    let bundleProducts =\r\n      typeof get().upsellProducts === \"function\"\r\n        ? await get().upsellProducts()\r\n        : await get().upsellProducts;\r\n\r\n    const _parentProduct =\r\n      bundleProducts.length >= 1 &&\r\n      bundleProducts.filter((e) => e.id === parentID);\r\n\r\n    let parentProduct = _parentProduct.length >= 1 ? _parentProduct[0] : null;\r\n\r\n    console.log(\r\n      `Adding the bundle product ${bundleID} to ${\r\n        parentProduct ? `parent ${parentProduct.id}` : `new parent.`\r\n      }`,\r\n    );\r\n\r\n    /* Adds parent to bundle to show it up on front-end later on */\r\n    const parent = get().getProductById(parentID);\r\n\r\n    const bundleProduct = get().getProductById(bundleID);\r\n\r\n    /* If it's an already existing product, adds the extra bundle to it */\r\n    if (parentProduct) {\r\n      const existingBundles = () => {\r\n        const _existing = parentProduct.bundle;\r\n\r\n        if (Symbol.iterator in Object(_existing)) {\r\n          return [..._existing];\r\n        }\r\n\r\n        return [_existing];\r\n      };\r\n\r\n      bundle = [...existingBundles(), bundleProduct];\r\n\r\n      bundleProducts = bundleProducts.filter((e) => e.id !== parentID);\r\n\r\n      console.log(bundleProducts);\r\n    }\r\n\r\n    /* In this \"one-line-if-else\", if the product is having a bundle for the first time,\r\n    it is added to the last line, adding both the parent and the first bundle. ([parent, bundleProduct]) */\r\n    const currentProduct = {\r\n      id: parentID,\r\n      bundle:\r\n        bundle && bundle.length >= 1\r\n          ? [...new Set(bundle)]\r\n          : [parent, bundleProduct],\r\n    };\r\n\r\n    const sanitizeBundleProducts = () => {\r\n      return Symbol.iterator in Object(bundleProducts)\r\n        ? [...bundleProducts]\r\n        : [];\r\n    };\r\n\r\n    const sanitizedBundleProducts = sanitizeBundleProducts();\r\n\r\n    const updated = [...sanitizedBundleProducts, currentProduct];\r\n\r\n    /* Save into Ecwid's database */\r\n    if (window.EcwidApp) {\r\n      try {\r\n        window.EcwidApp.setAppPublicConfig(\r\n          JSON.stringify({ upsellProducts: updated }),\r\n          function () {\r\n            console.log(\"New upsell product saved!\");\r\n          },\r\n        );\r\n      } catch (err) {\r\n        console.error(\r\n          \"Couldn't save upsell product. [store.js - addUpsellProduct()]\",\r\n        );\r\n      }\r\n    }\r\n\r\n    // console.log(\"updated: \", updated);\r\n\r\n    set({\r\n      upsellProducts: updated,\r\n    });\r\n  },\r\n\r\n  /* Get the bundle/upsell products of a specific product ID */\r\n  getUpsellProductById: async (id) => {\r\n    let bundleProducts =\r\n      typeof get().upsellProducts === \"function\"\r\n        ? await get().upsellProducts()\r\n        : await get().upsellProducts;\r\n\r\n    console.log(bundleProducts);\r\n\r\n    // console.log(\"Bundle products:\", bundleProducts);\r\n\r\n    const upsell = bundleProducts.filter((e) => e.id === id);\r\n    return upsell.length >= 1 ? upsell[0].bundle : [];\r\n  },\r\n\r\n  deleteUpsellProductById: async (parentID, bundleID) => {\r\n    let bundleProducts =\r\n      typeof get().upsellProducts === \"function\"\r\n        ? await get().upsellProducts()\r\n        : await get().upsellProducts;\r\n\r\n    let updated = [];\r\n\r\n    const parent = bundleProducts.find((e) => e.id === parentID);\r\n\r\n    if (!parent) {\r\n      console.log(\"parent is undefined!!!\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"deleted bundle from parent: \", parent, parentID, bundleID);\r\n    const updatedBundle = parent.bundle.filter((e) => e.id !== bundleID);\r\n\r\n    /* If deleting the last item, remove parent as well.\r\n    We use the number \"1\" because we always add the parent as an upsell. */\r\n    if (updatedBundle.length <= 1) {\r\n      updated = bundleProducts.filter((e) => e.id !== parentID);\r\n    } else {\r\n      updated = bundleProducts;\r\n    }\r\n\r\n    parent.bundle = updatedBundle;\r\n\r\n    console.log(\"Updated after delete: \", updated);\r\n\r\n    if (window.EcwidApp) {\r\n      try {\r\n        window.EcwidApp.setAppPublicConfig(\r\n          JSON.stringify({ upsellProducts: updated }),\r\n          function () {\r\n            console.log(\"Public config saved!\");\r\n          },\r\n        );\r\n\r\n        console.log(\"Saved upsell products in Database\");\r\n      } catch (err) {}\r\n    }\r\n\r\n    set({\r\n      upsellProducts: updated,\r\n    });\r\n  },\r\n\r\n  /* ## POPUP PRODUCTS\r\n  ==================================== */\r\n\r\n  /* Get current product being edited in the Popup. */\r\n  getCurrentPopupProduct: undefined,\r\n\r\n  /* Updates current product being edited in the popup. */\r\n  setCurrentPopupProduct: (id) => {\r\n    set({\r\n      getCurrentPopupProduct: id,\r\n    });\r\n  },\r\n}));\r\n\r\nexport default useStore;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport useStore from \"./store/store\";\r\n\r\nexport default function PopupItem({ product, parentID }) {\r\n  const addUpsellProduct = useStore((state) => state.addUpsellProduct);\r\n\r\n  const currentProductID = useStore((state) => state.getCurrentPopupProduct);\r\n  const getUpsellProductById = useStore((state) => state.getUpsellProductById);\r\n  const getCurrentPopupProduct = useStore(\r\n    (state) => state.getCurrentPopupProduct,\r\n  );\r\n\r\n  const [isAddable, setIsAddable] = useState(true);\r\n\r\n  const addBundleProduct = (id) => {\r\n    addUpsellProduct(currentProductID, id);\r\n    setIsAddable(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async (_) => {\r\n      const upsell = await getUpsellProductById(parentID);\r\n\r\n      if (upsell.filter((e) => e.id === product.id).length >= 1) {\r\n        setIsAddable(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"PopupItem  list-element list-element--compact list-element--has-hover list-element--inline-mode\">\r\n      <div className=\"list-element__image\">\r\n        <img src={product.thumbnailUrl} alt={product.name} />\r\n      </div>\r\n\r\n      <div className=\"list-element__content\">\r\n        <div className=\"list-element__info\">\r\n          <div className=\"list-element__header\">\r\n            <div className=\"list-element__main-info\">\r\n              <div className=\"list-element__title\">\r\n                <span>{product.name}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n        disabled={isAddable ? false : true}\r\n        onClick={(_) => addBundleProduct(product.id)}\r\n        type=\"button\"\r\n        className=\"btn btn-small btn-primary\">\r\n        <span className=\"svg-icon\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 12 12\"\r\n            focusable=\"false\">\r\n            <path d=\"M6.712 5.314H11v1.39H6.712V11H5.267V6.706H1V5.314h4.267V1h1.446v4.314z\"></path>\r\n          </svg>\r\n        </span>\r\n        <span className=\"gwt-InlineLabel\">{isAddable ? \"Add\" : \"Added\"}</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport PopupItem from \"./PopupItem\";\r\n\r\nimport \"./PopupCustom.scss\";\r\nimport useStore from \"./store/store\";\r\n\r\nexport default function PopupCustom({ parentID }) {\r\n  const products = useStore((state) => state.products);\r\n\r\n  return (\r\n    <div className=\"PopupCustom\">\r\n      <div className=\"a-card__paddings\">\r\n        <h3 className=\"PopupCustom-title\">\r\n          Please select the products to upsell:{\" \"}\r\n        </h3>\r\n      </div>\r\n      {products.items.map((e) => {\r\n        if (e.id === parentID) {\r\n          return;\r\n        }\r\n\r\n        return (\r\n          <PopupItem parentID={parentID} key={e.id} product={e}></PopupItem>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport PopupCustom from \"./PopupCustom\";\r\nimport \"./ProductItem.scss\";\r\nimport useStore from \"./store/store\";\r\nimport Products from \"./Products\";\r\n\r\nexport default function ProductItem({ product }) {\r\n  const [upsell, setUpsell] = useState([]);\r\n\r\n  const upsellProducts = useStore((state) => state.upsellProducts);\r\n  const getUpsellProductById = useStore((state) => state.getUpsellProductById);\r\n  const deleteUpsellProductById = useStore(\r\n    (state) => state.deleteUpsellProductById,\r\n  );\r\n\r\n  const getCurrentPopupProduct = useStore(\r\n    (state) => state.getCurrentPopupProduct,\r\n  );\r\n  const getProductById = useStore((state) => state.getProductById);\r\n  const setCurrentPopupProduct = useStore(\r\n    (state) => state.setCurrentPopupProduct,\r\n  );\r\n\r\n  const populateUpsells = async (id) => {\r\n    const bundle = await getUpsellProductById(product.id);\r\n    console.log(\"my ID and  bundle: \", bundle);\r\n    setUpsell(bundle);\r\n  };\r\n\r\n  const handlePopulateUpsell = async (subscription) => {\r\n    let bundleProducts;\r\n\r\n    if (subscription) {\r\n      bundleProducts =\r\n        typeof subscription.upsellProducts === \"function\"\r\n          ? await subscription.upsellProducts()\r\n          : await subscription.upsellProducts;\r\n    } else {\r\n      bundleProducts =\r\n        typeof upsellProducts === \"function\"\r\n          ? await upsellProducts()\r\n          : await upsellProducts;\r\n    }\r\n\r\n    if (bundleProducts && bundleProducts.length <= 0) {\r\n      setUpsell([]);\r\n      return;\r\n    }\r\n    const current = bundleProducts.filter((e) => e.id === product.id)[0];\r\n\r\n    console.log(\"ProducItem.js updating!\", current);\r\n    if (!current) {\r\n      setUpsell([]);\r\n      return;\r\n    }\r\n\r\n    populateUpsells(product.id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async (_) => {\r\n      handlePopulateUpsell();\r\n    })();\r\n\r\n    useStore.subscribe(async (e) => {\r\n      handlePopulateUpsell(e);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"current popup: \", getCurrentPopupProduct);\r\n  }, [getCurrentPopupProduct]);\r\n\r\n  const setProduct = () => {\r\n    console.log(\"setting current product: \", product.id);\r\n    setCurrentPopupProduct(product.id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ProductItem list-element list-element--compact list-element--has-hover list-element--inline-mode\">\r\n      <div className=\"list-element__image\">\r\n        <img src={product.thumbnailUrl} alt={product.name} />\r\n      </div>\r\n\r\n      <div className=\"list-element__content\">\r\n        <div className=\"list-element__info\">\r\n          <div className=\"list-element__header\">\r\n            <div className=\"list-element__main-info\">\r\n              <div className=\"list-element__title\">\r\n                <span>\r\n                  {product.name} {product.id}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"list-element__status-row\">\r\n            <span className=\"order__date-wrapper ProductItem-subtitle\">\r\n              Upsell Products:\r\n            </span>\r\n            <div className=\"list-element__data-row\">\r\n              {upsell &&\r\n                upsell.map((e) => {\r\n                  const _product = e;\r\n\r\n                  /* If the upsell product is the same as the parent, do not add it to the list. */\r\n                  if (_product.id === product.id) {\r\n                    return;\r\n                  }\r\n\r\n                  return (\r\n                    <div\r\n                      key={`${_product.id}_${product.id}`}\r\n                      className={`ProductItem-upsell ProductItem-upsell--${_product.id}-${product.id}`}>\r\n                      <span className=\"spacing--mr1\">{_product.name}</span>\r\n\r\n                      {/* <button onClick={() => increaseValue()}>add</button> */}\r\n\r\n                      <button\r\n                        onClick={(event) => {\r\n                          event.preventDefault();\r\n                          console.log(\r\n                            `Delete ${_product.id} from the parent ${product.id}`,\r\n                          );\r\n                          deleteUpsellProductById(product.id, _product.id);\r\n                          // try {\r\n\r\n                          //   // const $item = window.document.querySelector(\r\n                          //   //   `.ProductItem-upsell--${_product.id}-${product.id}`,\r\n                          //   // );\r\n\r\n                          //   // if ($item) {\r\n                          //     // $item.style.display = \"none\";\r\n                          //   }\r\n                          // } catch (err) {}\r\n                        }}\r\n                        className=\"icolink\">\r\n                        <span className=\"svg-icon\">\r\n                          <svg\r\n                            width=\"21\"\r\n                            height=\"21\"\r\n                            viewBox=\"0 0 21 21\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            focusable=\"false\">\r\n                            <path d=\"M3.5 5h14a.5.5 0 000-1h-14a.5.5 0 000 1zM5 16a2 2 0 002 2h7a2 2 0 002-2V6h1v10a3 3 0 01-3 3H7a3 3 0 01-3-3V6h1v10zm0 0a2 2 0 002 2h7a2 2 0 002-2V6h1v10a3 3 0 01-3 3H7a3 3 0 01-3-3V6h1v10z\"></path>\r\n                            <path d=\"M7.413 4.78L8.52 3.157c.28-.41.743-.656 1.24-.656h1.425a1.5 1.5 0 011.22.628l1.188 1.663.814-.58-1.188-1.663A2.5 2.5 0 0011.184 1.5H9.76c-.828 0-1.6.41-2.067 1.093L6.587 4.22l.826.56zM10 7.5v8a.5.5 0 001 0v-8a.5.5 0 00-1 0zm-3 0v8a.5.5 0 001 0v-8a.5.5 0 00-1 0zm6 0v8a.5.5 0 001 0v-8a.5.5 0 00-1 0z\"></path>\r\n                          </svg>\r\n                        </span>\r\n                      </button>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Popup\r\n        modal={true}\r\n        onOpen={() => {\r\n          setProduct();\r\n        }}\r\n        trigger={() => {\r\n          return (\r\n            <button type=\"button\" className=\"btn btn-small btn-primary\">\r\n              <span className=\"svg-icon\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 12 12\"\r\n                  focusable=\"false\">\r\n                  <path d=\"M6.712 5.314H11v1.39H6.712V11H5.267V6.706H1V5.314h4.267V1h1.446v4.314z\"></path>\r\n                </svg>\r\n              </span>\r\n              <span className=\"gwt-InlineLabel\">Add Upsell Products</span>\r\n            </button>\r\n          );\r\n        }}\r\n        position=\"center center\">\r\n        <PopupCustom parentID={product.id}></PopupCustom>\r\n      </Popup>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Products.scss\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport ProductPicker from \"./ProductPicker\";\r\nimport ProductItem from \"./ProductItem\";\r\nimport useStore from \"./store/store\";\r\n\r\nexport default function Products(props) {\r\n  // const upsellProductsSubscriber = useStore.subscribe(\r\n  //   (upsellProducts, previousupsellProducts) => {\r\n  //     console.log(\"Updated upsell products: \", upsellProducts);\r\n  //   },\r\n  //   (state) => state.upsellProducts,\r\n  // );\r\n\r\n  /* TODO - load database on load */\r\n\r\n  const populateProducts = useStore((state) => state.populateProducts);\r\n  const products = useStore((state) => state.products);\r\n\r\n  useEffect(() => {\r\n    populateProducts();\r\n\r\n    useStore.subscribe(\r\n      (upsellProducts, previousupsellProducts) => {\r\n        console.log(\"upsell products loaded!\");\r\n      },\r\n      (state) => state.upsellProducts,\r\n    );\r\n  }, []);\r\n\r\n  const ProductSkeleton = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"list-element list-element--compact list-element--has-hover list-element--inline-mode SkeletonLoader\">\r\n          <Skeleton count={1} height={50} />\r\n          <Skeleton count={3} height={7} />\r\n        </div>\r\n        <div className=\"list-element list-element--compact list-element--has-hover list-element--inline-mode SkeletonLoader\">\r\n          <Skeleton count={1} height={50} />\r\n          <Skeleton count={3} height={7} />\r\n        </div>\r\n        <div className=\"list-element list-element--compact list-element--has-hover list-element--inline-mode SkeletonLoader\">\r\n          <Skeleton count={1} height={50} />\r\n          <Skeleton count={3} height={7} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"Products  named-area\">\r\n      <div className=\"named-area__body\">\r\n        <div className=\"a-card a-card--compact\">\r\n          <div className=\"a-card__paddings\">\r\n            <h1 className=\"Products-title settings-page__title spacing--mt2\">\r\n              Products\r\n            </h1>\r\n\r\n            {products && products.hasOwnProperty(\"items\") ? (\r\n              products.items.map((e) => (\r\n                <ProductItem key={e.id} product={e}></ProductItem>\r\n              ))\r\n            ) : (\r\n              <ProductSkeleton></ProductSkeleton>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.scss\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport Products from \"./Products\";\n\nfunction App() {\n  const [storeData, setStoreData] = useState(null);\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    setStoreData(window.EcwidApp.getPayload());\n  }, []);\n\n  useEffect(() => {\n    if (window.EcwidApp && window.EcwidApp.getPayload()) {\n      window.EcwidApp.getAppPublicConfig(function (value) {\n        // console.log(\"my datatata\", JSON.parse(value));\n      });\n    }\n\n    console.log(\"rr my store data: \", storeData);\n  }, [storeData]);\n\n  return (\n    <div className=\"EasyUpsellApp\">\n      <div className=\"EasyUpsellApp-container\">\n        <Products></Products>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}