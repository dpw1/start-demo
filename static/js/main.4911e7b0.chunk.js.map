{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","storeData","setStoreData","products","setProducts","populateProducts","a","url","store_id","access_token","axios","get","_products","data","useEffect","window","EcwidApp","getPayload","console","log","className","items","map","e","src","thumbnailUrl","name","class","JSON","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAiFeA,MA7Ef,WAAgB,IAAD,EACqBC,mBAAS,MAD9B,mBACNC,EADM,KACKC,EADL,OAEmBF,mBAAS,IAF5B,mBAENG,EAFM,KAEIC,EAFJ,KAIPC,EAAgB,uCAAG,gCAAAC,EAAA,6DACjBC,EADiB,uCACqBN,EAAUO,SAD/B,2BAC0DP,EAAUQ,cADpE,SAGWC,IAAMC,IAAIJ,GAHrB,gBAGTK,EAHS,EAGfC,KACRT,EAAYQ,GAJW,2CAAH,qDAuBtB,OAhBAE,qBAAU,WACHC,OAAOC,UAIZd,EAAaa,OAAOC,SAASC,gBAC5B,IAEHH,qBAAU,WACR,sBAAC,sBAAAR,EAAA,sDACCD,IADD,0CAAD,GAIAa,QAAQC,IAAI,qBAAsBlB,KACjC,CAACA,IAGF,sBAAKmB,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,yBAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,0CAECjB,GACCA,EAASkB,MAAMC,KAAI,SAACC,GAClB,OACE,sBAAKH,UAAU,uFAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKI,IAAKD,EAAEE,iBAEd,qBAAKL,UAAU,wBAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,+BAAOG,EAAEG,SAEX,qBAAKN,UAAU,4BAAf,SACE,sBAAMA,UAAU,QAAhB,yBAIN,qBAAKO,MAAM,2BAAX,SACE,sBAAMA,MAAM,sBAAZ,+BAIF,sBAAKP,UAAU,yBAAf,UACE,sBAAMA,UAAU,eAAhB,4BACA,sBAAMA,UAAU,eAAhB,mDAjCxB,kBA4CkBjB,GAAYyB,KAAKC,UAAU1B,OChElC2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4911e7b0.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [storeData, setStoreData] = useState(null);\n  const [products, setProducts] = useState([]);\n\n  const populateProducts = async () => {\n    const url = `https://app.ecwid.com/api/v3/${storeData.store_id}/products?token=${storeData.access_token}`;\n\n    const { data: _products } = await axios.get(url);\n    setProducts(_products);\n  };\n\n  useEffect(() => {\n    if (!window.EcwidApp) {\n      return;\n    }\n\n    setStoreData(window.EcwidApp.getPayload());\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      populateProducts();\n    })();\n\n    console.log(\"rr my store data: \", storeData);\n  }, [storeData]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"named-area\">\n        <div className=\"named-area__body\">\n          <div className=\"a-card a-card--compact\">\n            <div className=\"a-card__paddings\">\n              <h4>Products</h4>\n\n              {products &&\n                products.items.map((e) => {\n                  return (\n                    <div className=\"list-element list-element--compact list-element--has-hover list-element--inline-mode\">\n                      <div className=\"list-element__image\">\n                        <img src={e.thumbnailUrl} />\n                      </div>\n                      <div className=\"list-element__content\">\n                        <div className=\"list-element__info\">\n                          <div className=\"list-element__header\">\n                            <div className=\"list-element__main-info\">\n                              <div className=\"list-element__title\">\n                                <span>{e.name}</span>\n                              </div>\n                              <div className=\"list-element__description\">\n                                <span className=\"muted\">0001</span>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"list-element__status-row\">\n                            <span class=\"order__date-wrapper\">\n                              Bundle Products\n                            </span>\n                          </div>\n                          <div className=\"list-element__data-row\">\n                            <span className=\"spacing--mr1\">Cool product 1</span>\n                            <span className=\"spacing--mr1\">Nice Product 2</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n      </div>\n      this is react: {products && JSON.stringify(products)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}