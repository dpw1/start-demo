{"version":3,"sources":["store/store.js","PopupItem.js","PopupCustom.js","ProductItem.js","Products.js","App.js","reportWebVitals.js","index.js"],"names":["useStore","create","set","get","products","populateProducts","a","url","test","window","location","href","EcwidApp","getPayload","store_id","access_token","axios","data","getProductById","id","items","filter","e","parseInt","upsellProducts","console","log","getAppPublicConfig","addUpsellProduct","parentID","bundleID","bundle","bundleProducts","_parentProduct","length","parentProduct","_existing","Symbol","iterator","Object","existingBundles","currentProduct","Set","updated","setAppPublicConfig","getUpsellProductById","upsell","getCurrentPopupProduct","undefined","setCurrentPopupProduct","PopupItem","product","state","currentProductID","className","src","thumbnailUrl","alt","name","onClick","_","type","xmlns","viewBox","focusable","d","PopupCustom","map","ProductItem","useState","setUpsell","subscribe","previousupsellProducts","_product","width","height","modal","onOpen","trigger","position","Products","props","useEffect","ProductSkeleton","Fragment","count","hasOwnProperty","App","storeData","setStoreData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qXAgIeA,EA7HEC,aAAO,SAACC,EAAKC,GAAN,MAAe,CAGrCC,SAAU,GAIVC,iBAAiB,WAAD,4BAAE,gCAAAC,EAAA,6DAEVC,EAAM,YAAYC,KAAKC,OAAOC,SAASC,MAAjC,sIAGNF,OAAOG,SAASC,aAAaC,SAHvB,2BAIWL,OAAOG,SAASC,aAAaE,cANpC,SAQiBC,IAAMb,IAAII,GAR3B,gBAQFH,EARE,EAQRa,KAERf,EAAI,CACFE,aAXc,2CAAF,kDAAC,GAejBc,eAAgB,SAACC,GACf,OAAOhB,IAAMC,SAASgB,MAAMC,QAAO,SAACC,GAAD,OAAOA,EAAEH,KAAOI,SAASJ,MAAK,IAOnEK,eAAgB,WACd,OAAIf,OAAOG,UACTa,QAAQC,IACN,yBACAjB,OAAOG,SAASe,mBAAmB,oBAG9BlB,OAAOG,SAASe,mBAAmB,mBACvCH,gBAGE,IAGTI,iBAAkB,SAACC,EAAUC,GAI3B,IAAIC,EACAC,EAAiB7B,IAAMqB,eAIrBS,EACJD,EAAeE,QAAU,GACzBF,EAAeX,QAAO,SAACC,GAAD,OAAOA,EAAEH,KAAOU,KACpCM,EAAgBF,EAAeC,QAAU,EAAID,EAAe,GAAK,KAQrE,GANAR,QAAQC,IAAR,yCACoCI,EADpC,eAEIK,EAAa,iBAAaA,EAAchB,IAA3B,gBAIbgB,EAAe,CAWjBJ,EAAM,sBAVkB,WACtB,IAAMK,EAAYD,EAAcJ,OAEhC,OAAIM,OAAOC,YAAYC,OAAOH,GACrB,YAAIA,GAGN,CAACA,GAGGI,IAAP,CAA0BV,IAEhCE,EAAiBA,EAAeX,QAAO,SAACC,GAAD,OAAOA,EAAEH,KAAOU,KAGzD,IAAMY,EAAiB,CACrBtB,GAAIU,EACJE,OAAQA,GAAUA,EAAOG,QAAU,EAA3B,YAAmC,IAAIQ,IAAIX,IAAW,CAACD,IAG3Da,EAAO,sBAAOX,GAAP,CAAuBS,IAEhChC,OAAOG,WACTH,OAAOG,SAASgC,mBAAmB,CACjCpB,eAAgBmB,IAGlBlB,QAAQC,IAAI,sCAGdD,QAAQC,IAAI,YAAaiB,GAEzBzC,EAAI,CACFsB,eAAgBmB,KAIpBE,qBAAsB,SAAC1B,GACrB,IAIM2B,EAJe3C,IAAMqB,eAIGH,QAAO,SAACC,GAAD,OAAOA,EAAEH,KAAOA,KACrD,OAAO2B,EAAOZ,QAAU,EAAIY,EAAO,GAAGf,OAAS,IAOjDgB,4BAAwBC,EAGxBC,uBAAwB,SAAC9B,GACvBjB,EAAI,CACF6C,uBAAwB5B,SCxHf,SAAS+B,EAAT,GAAiC,IAAZC,EAAW,EAAXA,QAC5BvB,EAAmB5B,GAAS,SAACoD,GAAD,OAAWA,EAAMxB,oBAE7CyB,EAAmBrD,GAAS,SAACoD,GAAD,OAAWA,EAAML,0BAMnD,OACE,sBAAKO,UAAU,kGAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKC,IAAKJ,EAAQK,aAAcC,IAAKN,EAAQO,SAG/C,qBAAKJ,UAAU,wBAAf,SACE,qBAAKA,UAAU,qBAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,qBAAKA,UAAU,0BAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,+BAAOH,EAAQO,iBAOzB,yBACEC,QAAS,SAACC,GAAD,OAvBWzC,EAuBagC,EAAQhC,QAtB7CS,EAAiByB,EAAkBlC,GADZ,IAACA,GAwBpB0C,KAAK,SACLP,UAAU,4BAHZ,UAIE,sBAAMA,UAAU,WAAhB,SACE,qBACEQ,MAAM,6BACNC,QAAQ,YACRC,UAAU,QAHZ,SAIE,sBAAMC,EAAE,+EAGZ,sBAAMX,UAAU,kBAAhB,uB,MCpCO,SAASY,EAAT,GAAoC,IAAbrC,EAAY,EAAZA,SAC9BzB,EAAWJ,GAAS,SAACoD,GAAD,OAAWA,EAAMhD,YAE3C,OACE,sBAAKkD,UAAU,cAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,0EAEDlD,EAASgB,MAAM+C,KAAI,SAAC7C,GACnB,GAAIA,EAAEH,KAAOU,EAIb,OAAO,cAACqB,EAAD,CAAsBC,QAAS7B,GAAfA,EAAEH,U,MCZlB,SAASiD,EAAT,GAAmC,IAAZjB,EAAW,EAAXA,QAAW,EACnBkB,mBAAS,IADU,mBACxCvB,EADwC,KAChCwB,EADgC,KAGzCzB,EAAuB7C,GAAS,SAACoD,GAAD,OAAWA,EAAMP,wBACjD3B,EAAiBlB,GAAS,SAACoD,GAAD,OAAWA,EAAMlC,kBAE3C+B,EAAyBjD,GAC7B,SAACoD,GAAD,OAAWA,EAAMH,0BAGcjD,EAASuE,WACxC,SAAC/C,EAAgBgD,GAGf,IAAMzC,EAASc,EAAqBM,EAAQhC,IAC5CM,QAAQC,IAAI,sBAAuByB,EAAQhC,GAAIY,GAE/CuC,EAAUvC,MAEZ,SAACqB,GAAD,OAAWA,EAAM5B,kBAQnB,OACE,sBAAK8B,UAAU,mGAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKC,IAAKJ,EAAQK,aAAcC,IAAKN,EAAQO,SAG/C,qBAAKJ,UAAU,wBAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,qBAAKA,UAAU,0BAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,iCACGH,EAAQO,KADX,IACkBP,EAAQhC,YAKhC,sBAAKmC,UAAU,2BAAf,UACE,sBAAMA,UAAU,sBAAhB,8BACA,qBAAKA,UAAU,yBAAf,SAqBGR,GACCA,EAAOqB,KAAI,SAAC7C,GACV,IAAMmD,EAAWvD,EAAeI,GAEhC,OACE,sBAAagC,UAAU,qBAAvB,UACE,sBAAMA,UAAU,eAAhB,SAAgCmB,EAASf,OAIzC,mBAAGJ,UAAU,UAAU3C,KAAK,IAA5B,SACE,sBAAM2C,UAAU,WAAhB,SACE,sBACEoB,MAAM,KACNC,OAAO,KACPZ,QAAQ,YACRD,MAAM,6BACNE,UAAU,QALZ,UAME,sBAAMC,EAAE,gMACR,sBAAMA,EAAE,wTAdN3C,gBA0BxB,cAAC,IAAD,CACEsD,OAAO,EACPC,OAAQ,WA7EZpD,QAAQC,IAAI,4BAA6ByB,EAAQhC,IACjD8B,EAAuBE,EAAQhC,KA+E3B2D,QAAS,WACP,OACE,yBAAQjB,KAAK,SAASP,UAAU,4BAAhC,UACE,sBAAMA,UAAU,WAAhB,SACE,qBACEQ,MAAM,6BACNC,QAAQ,YACRC,UAAU,QAHZ,SAIE,sBAAMC,EAAE,+EAGZ,sBAAMX,UAAU,kBAAhB,qCAINyB,SAAS,gBApBX,SAqBE,cAAC,EAAD,CAAalD,SAAUsB,EAAQhC,UCvHxB,SAAS6D,EAASC,GAQ/B,IAAM5E,EAAmBL,GAAS,SAACoD,GAAD,OAAWA,EAAM/C,oBAC7CD,EAAWJ,GAAS,SAACoD,GAAD,OAAWA,EAAMhD,YAS3C8E,qBAAU,WACR7E,MACC,IAEH,IAAM8E,EAAkB,WACtB,OACE,eAAC,IAAMC,SAAP,WACE,sBAAK9B,UAAU,sGAAf,UACE,cAAC,IAAD,CAAU+B,MAAO,EAAGV,OAAQ,KAC5B,cAAC,IAAD,CAAUU,MAAO,EAAGV,OAAQ,OAE9B,sBAAKrB,UAAU,sGAAf,UACE,cAAC,IAAD,CAAU+B,MAAO,EAAGV,OAAQ,KAC5B,cAAC,IAAD,CAAUU,MAAO,EAAGV,OAAQ,OAE9B,sBAAKrB,UAAU,sGAAf,UACE,cAAC,IAAD,CAAU+B,MAAO,EAAGV,OAAQ,KAC5B,cAAC,IAAD,CAAUU,MAAO,EAAGV,OAAQ,WAMpC,OACE,qBAAKrB,UAAU,uBAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,yBAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,oCAAd,sBAEClD,GAAYA,EAASkF,eAAe,SACnClF,EAASgB,MAAM+C,KAAI,SAAC7C,GAAD,OACjB,cAAC,EAAD,CAAwB6B,QAAS7B,GAAfA,EAAEH,OAGtB,cAACgE,EAAD,aCnCCI,MAnBf,WAAgB,IAAD,EACqBlB,mBAAS,MAD9B,mBACNmB,EADM,KACKC,EADL,OAEmBpB,mBAAS,IAF5B,mBAYb,OAZa,UAIba,qBAAU,WACRO,EAAahF,OAAOG,SAASC,gBAC5B,IAEHqE,qBAAU,WACRzD,QAAQC,IAAI,qBAAsB8D,KACjC,CAACA,IAGF,qBAAKlC,UAAU,gBAAf,SACE,cAAC,EAAD,OCRSoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.278bdc12.chunk.js","sourcesContent":["import create from \"zustand\";\r\nimport axios from \"axios\";\r\n\r\nconst useStore = create((set, get) => ({\r\n  /* ## API PRODUCTS\r\n  ==================================== */\r\n  products: [],\r\n\r\n  /* ===============\r\n  Get store's products and populate  */\r\n  populateProducts: async () => {\r\n    /* TODO = change this URL when on production */\r\n    const url = /localhost/.test(window.location.href)\r\n      ? `https://app.ecwid.com/api/v3/37374877/products?token=secret_EkQGe8SC4V4DHgSrnkmXsQsneDQ9JwQ4`\r\n      : `https://app.ecwid.com/api/v3/${\r\n          window.EcwidApp.getPayload().store_id\r\n        }/products?token=${window.EcwidApp.getPayload().access_token}`;\r\n\r\n    const { data: products } = await axios.get(url);\r\n\r\n    set({\r\n      products,\r\n    });\r\n  },\r\n\r\n  getProductById: (id) => {\r\n    return get().products.items.filter((e) => e.id === parseInt(id))[0];\r\n  },\r\n\r\n  /* ## UPSELL PRODUCTS\r\n  ==================================== */\r\n\r\n  /* Bundle products that will show up at the front-end. */\r\n  upsellProducts: () => {\r\n    if (window.EcwidApp) {\r\n      console.log(\r\n        \"Your upsell products: \",\r\n        window.EcwidApp.getAppPublicConfig(\"easy-upsell-dev\"),\r\n      );\r\n\r\n      return window.EcwidApp.getAppPublicConfig(\"easy-upsell-dev\")\r\n        .upsellProducts;\r\n    }\r\n\r\n    return [];\r\n  },\r\n\r\n  addUpsellProduct: (parentID, bundleID) => {\r\n    /* TODO \r\ndouble check whether id already exists, if so, add bundle to existing id */\r\n\r\n    let bundle;\r\n    let bundleProducts = get().upsellProducts;\r\n\r\n    // console.log(\"Bundle products:\", bundleProducts);\r\n\r\n    const _parentProduct =\r\n      bundleProducts.length >= 1 &&\r\n      bundleProducts.filter((e) => e.id === parentID);\r\n    let parentProduct = _parentProduct.length >= 1 ? _parentProduct[0] : null;\r\n\r\n    console.log(\r\n      `I wanna add the bundle product ${bundleID} to ${\r\n        parentProduct ? `parent ${parentProduct.id}` : `new parent.`\r\n      }`,\r\n    );\r\n\r\n    if (parentProduct) {\r\n      const existingBundles = () => {\r\n        const _existing = parentProduct.bundle;\r\n\r\n        if (Symbol.iterator in Object(_existing)) {\r\n          return [..._existing];\r\n        }\r\n\r\n        return [_existing];\r\n      };\r\n\r\n      bundle = [...existingBundles(), bundleID];\r\n\r\n      bundleProducts = bundleProducts.filter((e) => e.id !== parentID);\r\n    }\r\n\r\n    const currentProduct = {\r\n      id: parentID,\r\n      bundle: bundle && bundle.length >= 1 ? [...new Set(bundle)] : [bundleID],\r\n    };\r\n\r\n    const updated = [...bundleProducts, currentProduct];\r\n\r\n    if (window.EcwidApp) {\r\n      window.EcwidApp.setAppPublicConfig({\r\n        upsellProducts: updated,\r\n      });\r\n\r\n      console.log(\"Saved upsell products in Database\");\r\n    }\r\n\r\n    console.log(\"updated: \", updated);\r\n\r\n    set({\r\n      upsellProducts: updated,\r\n    });\r\n  },\r\n\r\n  getUpsellProductById: (id) => {\r\n    let bundleProducts = get().upsellProducts;\r\n\r\n    // console.log(\"Bundle products:\", bundleProducts);\r\n\r\n    const upsell = bundleProducts.filter((e) => e.id === id);\r\n    return upsell.length >= 1 ? upsell[0].bundle : [];\r\n  },\r\n\r\n  /* ## POPUP PRODUCTS\r\n  ==================================== */\r\n\r\n  /* Current product being edited in the Popup. */\r\n  getCurrentPopupProduct: undefined,\r\n\r\n  /* Updates current product. */\r\n  setCurrentPopupProduct: (id) => {\r\n    set({\r\n      getCurrentPopupProduct: id,\r\n    });\r\n  },\r\n}));\r\n\r\nexport default useStore;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport useStore from \"./store/store\";\r\n\r\nexport default function PopupItem({ product }) {\r\n  const addUpsellProduct = useStore((state) => state.addUpsellProduct);\r\n\r\n  const currentProductID = useStore((state) => state.getCurrentPopupProduct);\r\n\r\n  const addBundleProduct = (id) => {\r\n    addUpsellProduct(currentProductID, id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"PopupItem  list-element list-element--compact list-element--has-hover list-element--inline-mode\">\r\n      <div className=\"list-element__image\">\r\n        <img src={product.thumbnailUrl} alt={product.name} />\r\n      </div>\r\n\r\n      <div className=\"list-element__content\">\r\n        <div className=\"list-element__info\">\r\n          <div className=\"list-element__header\">\r\n            <div className=\"list-element__main-info\">\r\n              <div className=\"list-element__title\">\r\n                <span>{product.name}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n        onClick={(_) => addBundleProduct(product.id)}\r\n        type=\"button\"\r\n        className=\"btn btn-small btn-primary\">\r\n        <span className=\"svg-icon\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 12 12\"\r\n            focusable=\"false\">\r\n            <path d=\"M6.712 5.314H11v1.39H6.712V11H5.267V6.706H1V5.314h4.267V1h1.446v4.314z\"></path>\r\n          </svg>\r\n        </span>\r\n        <span className=\"gwt-InlineLabel\">Add</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport PopupItem from \"./PopupItem\";\r\n\r\nimport \"./PopupCustom.scss\";\r\nimport useStore from \"./store/store\";\r\n\r\nexport default function PopupCustom({ parentID }) {\r\n  const products = useStore((state) => state.products);\r\n\r\n  return (\r\n    <div className=\"PopupCustom\">\r\n      <div className=\"a-card__paddings\">\r\n        <h3>Please select the products to upsell: </h3>\r\n      </div>\r\n      {products.items.map((e) => {\r\n        if (e.id === parentID) {\r\n          return;\r\n        }\r\n\r\n        return <PopupItem key={e.id} product={e}></PopupItem>;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport PopupCustom from \"./PopupCustom\";\r\nimport \"./ProductItem.scss\";\r\nimport useStore from \"./store/store\";\r\n\r\nexport default function ProductItem({ product }) {\r\n  const [upsell, setUpsell] = useState([]);\r\n\r\n  const getUpsellProductById = useStore((state) => state.getUpsellProductById);\r\n  const getProductById = useStore((state) => state.getProductById);\r\n\r\n  const setCurrentPopupProduct = useStore(\r\n    (state) => state.setCurrentPopupProduct,\r\n  );\r\n\r\n  const upsellProductsSubscriber = useStore.subscribe(\r\n    (upsellProducts, previousupsellProducts) => {\r\n      // console.log(\"Updated upsell products: \", upsellProducts);\r\n\r\n      const bundle = getUpsellProductById(product.id);\r\n      console.log(\"my ID and  bundle: \", product.id, bundle);\r\n\r\n      setUpsell(bundle);\r\n    },\r\n    (state) => state.upsellProducts,\r\n  );\r\n\r\n  const setProduct = () => {\r\n    console.log(\"setting current product: \", product.id);\r\n    setCurrentPopupProduct(product.id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ProductItem list-element list-element--compact list-element--has-hover list-element--inline-mode\">\r\n      <div className=\"list-element__image\">\r\n        <img src={product.thumbnailUrl} alt={product.name} />\r\n      </div>\r\n\r\n      <div className=\"list-element__content\">\r\n        <div className=\"list-element__info\">\r\n          <div className=\"list-element__header\">\r\n            <div className=\"list-element__main-info\">\r\n              <div className=\"list-element__title\">\r\n                <span>\r\n                  {product.name} {product.id}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"list-element__status-row\">\r\n            <span className=\"order__date-wrapper\">Upsell Products:</span>\r\n            <div className=\"list-element__data-row\">\r\n              {/* <div className=\"ProductItem-upsell\">\r\n                <span className=\"spacing--mr1\">Cool product 1</span>\r\n\r\n                \r\n\r\n                <a className=\"icolink\" href=\"#\">\r\n                  <span className=\"svg-icon\">\r\n                    <svg\r\n                      width=\"21\"\r\n                      height=\"21\"\r\n                      viewBox=\"0 0 21 21\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      focusable=\"false\">\r\n                      <path d=\"M3.5 5h14a.5.5 0 000-1h-14a.5.5 0 000 1zM5 16a2 2 0 002 2h7a2 2 0 002-2V6h1v10a3 3 0 01-3 3H7a3 3 0 01-3-3V6h1v10zm0 0a2 2 0 002 2h7a2 2 0 002-2V6h1v10a3 3 0 01-3 3H7a3 3 0 01-3-3V6h1v10z\"></path>\r\n                      <path d=\"M7.413 4.78L8.52 3.157c.28-.41.743-.656 1.24-.656h1.425a1.5 1.5 0 011.22.628l1.188 1.663.814-.58-1.188-1.663A2.5 2.5 0 0011.184 1.5H9.76c-.828 0-1.6.41-2.067 1.093L6.587 4.22l.826.56zM10 7.5v8a.5.5 0 001 0v-8a.5.5 0 00-1 0zm-3 0v8a.5.5 0 001 0v-8a.5.5 0 00-1 0zm6 0v8a.5.5 0 001 0v-8a.5.5 0 00-1 0z\"></path>\r\n                    </svg>\r\n                  </span>\r\n                </a>\r\n              </div> */}\r\n\r\n              {upsell &&\r\n                upsell.map((e) => {\r\n                  const _product = getProductById(e);\r\n\r\n                  return (\r\n                    <div key={e} className=\"ProductItem-upsell\">\r\n                      <span className=\"spacing--mr1\">{_product.name}</span>\r\n\r\n                      {/* <button onClick={() => increaseValue()}>add</button> */}\r\n\r\n                      <a className=\"icolink\" href=\"#\">\r\n                        <span className=\"svg-icon\">\r\n                          <svg\r\n                            width=\"21\"\r\n                            height=\"21\"\r\n                            viewBox=\"0 0 21 21\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            focusable=\"false\">\r\n                            <path d=\"M3.5 5h14a.5.5 0 000-1h-14a.5.5 0 000 1zM5 16a2 2 0 002 2h7a2 2 0 002-2V6h1v10a3 3 0 01-3 3H7a3 3 0 01-3-3V6h1v10zm0 0a2 2 0 002 2h7a2 2 0 002-2V6h1v10a3 3 0 01-3 3H7a3 3 0 01-3-3V6h1v10z\"></path>\r\n                            <path d=\"M7.413 4.78L8.52 3.157c.28-.41.743-.656 1.24-.656h1.425a1.5 1.5 0 011.22.628l1.188 1.663.814-.58-1.188-1.663A2.5 2.5 0 0011.184 1.5H9.76c-.828 0-1.6.41-2.067 1.093L6.587 4.22l.826.56zM10 7.5v8a.5.5 0 001 0v-8a.5.5 0 00-1 0zm-3 0v8a.5.5 0 001 0v-8a.5.5 0 00-1 0zm6 0v8a.5.5 0 001 0v-8a.5.5 0 00-1 0z\"></path>\r\n                          </svg>\r\n                        </span>\r\n                      </a>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Popup\r\n        modal={true}\r\n        onOpen={() => {\r\n          setProduct();\r\n        }}\r\n        trigger={() => {\r\n          return (\r\n            <button type=\"button\" className=\"btn btn-small btn-primary\">\r\n              <span className=\"svg-icon\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 12 12\"\r\n                  focusable=\"false\">\r\n                  <path d=\"M6.712 5.314H11v1.39H6.712V11H5.267V6.706H1V5.314h4.267V1h1.446v4.314z\"></path>\r\n                </svg>\r\n              </span>\r\n              <span className=\"gwt-InlineLabel\">Add Upsell Products</span>\r\n            </button>\r\n          );\r\n        }}\r\n        position=\"center center\">\r\n        <PopupCustom parentID={product.id}></PopupCustom>\r\n      </Popup>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport \"./Products.scss\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport ProductPicker from \"./ProductPicker\";\r\nimport ProductItem from \"./ProductItem\";\r\nimport useStore from \"./store/store\";\r\n\r\nexport default function Products(props) {\r\n  // const upsellProductsSubscriber = useStore.subscribe(\r\n  //   (upsellProducts, previousupsellProducts) => {\r\n  //     console.log(\"Updated upsell products: \", upsellProducts);\r\n  //   },\r\n  //   (state) => state.upsellProducts,\r\n  // );\r\n\r\n  const populateProducts = useStore((state) => state.populateProducts);\r\n  const products = useStore((state) => state.products);\r\n\r\n  // useStore.subscribe(\r\n  //   (e) => {\r\n  //     console.log(\"changes: \", e);\r\n  //   },\r\n  //   (state) => state.upsellProducts,\r\n  // );\r\n\r\n  useEffect(() => {\r\n    populateProducts();\r\n  }, []);\r\n\r\n  const ProductSkeleton = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"list-element list-element--compact list-element--has-hover list-element--inline-mode SkeletonLoader\">\r\n          <Skeleton count={1} height={50} />\r\n          <Skeleton count={3} height={7} />\r\n        </div>\r\n        <div className=\"list-element list-element--compact list-element--has-hover list-element--inline-mode SkeletonLoader\">\r\n          <Skeleton count={1} height={50} />\r\n          <Skeleton count={3} height={7} />\r\n        </div>\r\n        <div className=\"list-element list-element--compact list-element--has-hover list-element--inline-mode SkeletonLoader\">\r\n          <Skeleton count={1} height={50} />\r\n          <Skeleton count={3} height={7} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"Products  named-area\">\r\n      <div className=\"named-area__body\">\r\n        <div className=\"a-card a-card--compact\">\r\n          <div className=\"a-card__paddings\">\r\n            <h1 className=\"settings-page__title spacing--mt2\">Products</h1>\r\n\r\n            {products && products.hasOwnProperty(\"items\") ? (\r\n              products.items.map((e) => (\r\n                <ProductItem key={e.id} product={e}></ProductItem>\r\n              ))\r\n            ) : (\r\n              <ProductSkeleton></ProductSkeleton>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.scss\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport Products from \"./Products\";\n\nfunction App() {\n  const [storeData, setStoreData] = useState(null);\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    setStoreData(window.EcwidApp.getPayload());\n  }, []);\n\n  useEffect(() => {\n    console.log(\"rr my store data: \", storeData);\n  }, [storeData]);\n\n  return (\n    <div className=\"EasyUpsellApp\">\n      <Products></Products>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}