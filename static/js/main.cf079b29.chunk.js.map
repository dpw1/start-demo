{"version":3,"sources":["store/store.js","PopupItem.js","PopupCustom.js","ProductItem.js","Products.js","App.js","reportWebVitals.js","index.js"],"names":["useStore","create","set","get","products","populateProducts","a","axios","data","upsellProducts","addUpsellProduct","product","updated","currentProduct","undefined","setCurrentProduct","id","PopupItem","state","currentProductID","className","src","thumbnailUrl","alt","name","onClick","_","console","log","bundle","type","xmlns","viewBox","focusable","d","PopupCustom","useRef","getState","useEffect","items","map","e","ProductItem","href","width","height","modal","onOpen","trigger","position","Products","props","storeSubscriber","subscribe","current","ProductSkeleton","Fragment","count","hasOwnProperty","App","useState","storeData","setStoreData","window","EcwidApp","getPayload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf079b29.chunk.js","sourcesContent":["import create from \"zustand\";\r\nimport axios from \"axios\";\r\n\r\nconst useStore = create((set, get) => ({\r\n  /* All products coming from the API */\r\n  products: [],\r\n\r\n  populateProducts: async () => {\r\n    /* TODO = change this URL when on production */\r\n    const url = `https://app.ecwid.com/api/v3/37374877/products?token=secret_EkQGe8SC4V4DHgSrnkmXsQsneDQ9JwQ4`;\r\n\r\n    const { data: products } = await axios.get(url);\r\n\r\n    set({\r\n      products,\r\n    });\r\n  },\r\n\r\n  /* Products that will show up at the front-end. */\r\n  upsellProducts: [],\r\n\r\n  addUpsellProduct: (product) => {\r\n    /* TODO \r\ndouble check whether id already exists, if so, add bundle to existing id */\r\n\r\n    const _upsellProducts = get().upsellProducts;\r\n\r\n    // _upsellProducts.filter( e => e.)\r\n\r\n    const updated = [...get().upsellProducts, product];\r\n\r\n    set({\r\n      upsellProducts: updated,\r\n    });\r\n  },\r\n\r\n  /* Current parent product being edited in the Popup. */\r\n  currentProduct: undefined,\r\n\r\n  /* Updates current product. */\r\n  setCurrentProduct: (id) => {\r\n    set({\r\n      currentProduct: id,\r\n    });\r\n  },\r\n}));\r\n\r\nexport default useStore;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport useStore from \"./store/store\";\r\n\r\nexport default function PopupItem({ product }) {\r\n  const addUpsellProduct = useStore((state) => state.addUpsellProduct);\r\n\r\n  const currentProductID = useStore((state) => state.currentProduct);\r\n\r\n  const addBundleProduct = (id) => {\r\n    console.log();\r\n\r\n    const _product = {\r\n      id: currentProductID,\r\n      bundle: [id],\r\n    };\r\n\r\n    addUpsellProduct(_product);\r\n    console.log(`adding product ${id} to the parent: ${currentProductID}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"PopupItem  list-element list-element--compact list-element--has-hover list-element--inline-mode\">\r\n      <div className=\"list-element__image\">\r\n        <img src={product.thumbnailUrl} alt={product.name} />\r\n      </div>\r\n\r\n      <div className=\"list-element__content\">\r\n        <div className=\"list-element__info\">\r\n          <div className=\"list-element__header\">\r\n            <div className=\"list-element__main-info\">\r\n              <div className=\"list-element__title\">\r\n                <span>{product.name}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n        onClick={(_) => addBundleProduct(product.id)}\r\n        type=\"button\"\r\n        className=\"btn btn-small btn-primary\">\r\n        <span className=\"svg-icon\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 12 12\"\r\n            focusable=\"false\">\r\n            <path d=\"M6.712 5.314H11v1.39H6.712V11H5.267V6.706H1V5.314h4.267V1h1.446v4.314z\"></path>\r\n          </svg>\r\n        </span>\r\n        <span className=\"gwt-InlineLabel\">Add</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport PopupItem from \"./PopupItem\";\r\n\r\nimport \"./PopupCustom.scss\";\r\nimport useStore from \"./store/store\";\r\n\r\nexport default function PopupCustom() {\r\n  const products = useStore((state) => state.products);\r\n  const upsellProducts = useStore((state) => state.upsellProducts);\r\n  const upsellProductsSubscriber = useRef(useStore.getState().upsellProducts);\r\n\r\n  useEffect(() => {\r\n    console.log(\"current upsell products: \", upsellProducts);\r\n  }, [upsellProducts]);\r\n\r\n  return (\r\n    <div className=\"PopupCustom\">\r\n      <div className=\"a-card__paddings\">\r\n        <h3>Please select the products to upsell: </h3>\r\n      </div>\r\n      {products.items.map((e) => (\r\n        <PopupItem key={e.id} product={e}></PopupItem>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport PopupCustom from \"./PopupCustom\";\r\nimport \"./ProductItem.scss\";\r\nimport useStore from \"./store/store\";\r\n\r\nexport default function ProductItem({ product }) {\r\n  const currentProductSubscriber = useRef(useStore.getState().currentProduct);\r\n\r\n  const currentProduct = useStore((state) => state.currentProduct);\r\n  const setCurrentProduct = useStore((state) => state.setCurrentProduct);\r\n\r\n  const setProduct = () => {\r\n    console.log(\"setting current product: \", product.id);\r\n    setCurrentProduct(product.id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ProductItem list-element list-element--compact list-element--has-hover list-element--inline-mode\">\r\n      <div className=\"list-element__image\">\r\n        <img src={product.thumbnailUrl} alt={product.name} />\r\n      </div>\r\n\r\n      <div className=\"list-element__content\">\r\n        <div className=\"list-element__info\">\r\n          <div className=\"list-element__header\">\r\n            <div className=\"list-element__main-info\">\r\n              <div className=\"list-element__title\">\r\n                <span>{product.name}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"list-element__status-row\">\r\n            <span className=\"order__date-wrapper\">Upsell Products:</span>\r\n            <div className=\"list-element__data-row\">\r\n              <div className=\"ProductItem-upsell\">\r\n                <span className=\"spacing--mr1\">Cool product 1</span>\r\n\r\n                {/* <button onClick={() => increaseValue()}>add</button> */}\r\n\r\n                <a className=\"icolink\" href=\"#\">\r\n                  <span className=\"svg-icon\">\r\n                    <svg\r\n                      width=\"21\"\r\n                      height=\"21\"\r\n                      viewBox=\"0 0 21 21\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      focusable=\"false\">\r\n                      <path d=\"M3.5 5h14a.5.5 0 000-1h-14a.5.5 0 000 1zM5 16a2 2 0 002 2h7a2 2 0 002-2V6h1v10a3 3 0 01-3 3H7a3 3 0 01-3-3V6h1v10zm0 0a2 2 0 002 2h7a2 2 0 002-2V6h1v10a3 3 0 01-3 3H7a3 3 0 01-3-3V6h1v10z\"></path>\r\n                      <path d=\"M7.413 4.78L8.52 3.157c.28-.41.743-.656 1.24-.656h1.425a1.5 1.5 0 011.22.628l1.188 1.663.814-.58-1.188-1.663A2.5 2.5 0 0011.184 1.5H9.76c-.828 0-1.6.41-2.067 1.093L6.587 4.22l.826.56zM10 7.5v8a.5.5 0 001 0v-8a.5.5 0 00-1 0zm-3 0v8a.5.5 0 001 0v-8a.5.5 0 00-1 0zm6 0v8a.5.5 0 001 0v-8a.5.5 0 00-1 0z\"></path>\r\n                    </svg>\r\n                  </span>\r\n                </a>\r\n              </div>\r\n\r\n              <div className=\"ProductItem-upsell\">\r\n                <span className=\"spacing--mr1\">Cool product 2</span>\r\n\r\n                <a className=\"icolink\" href=\"#\">\r\n                  <span className=\"svg-icon\">\r\n                    <svg\r\n                      width=\"21\"\r\n                      height=\"21\"\r\n                      viewBox=\"0 0 21 21\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      focusable=\"false\">\r\n                      <path d=\"M3.5 5h14a.5.5 0 000-1h-14a.5.5 0 000 1zM5 16a2 2 0 002 2h7a2 2 0 002-2V6h1v10a3 3 0 01-3 3H7a3 3 0 01-3-3V6h1v10zm0 0a2 2 0 002 2h7a2 2 0 002-2V6h1v10a3 3 0 01-3 3H7a3 3 0 01-3-3V6h1v10z\"></path>\r\n                      <path d=\"M7.413 4.78L8.52 3.157c.28-.41.743-.656 1.24-.656h1.425a1.5 1.5 0 011.22.628l1.188 1.663.814-.58-1.188-1.663A2.5 2.5 0 0011.184 1.5H9.76c-.828 0-1.6.41-2.067 1.093L6.587 4.22l.826.56zM10 7.5v8a.5.5 0 001 0v-8a.5.5 0 00-1 0zm-3 0v8a.5.5 0 001 0v-8a.5.5 0 00-1 0zm6 0v8a.5.5 0 001 0v-8a.5.5 0 00-1 0z\"></path>\r\n                    </svg>\r\n                  </span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Popup\r\n        modal={true}\r\n        onOpen={() => {\r\n          setProduct();\r\n        }}\r\n        trigger={() => {\r\n          return (\r\n            <button type=\"button\" className=\"btn btn-small btn-primary\">\r\n              <span className=\"svg-icon\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 12 12\"\r\n                  focusable=\"false\">\r\n                  <path d=\"M6.712 5.314H11v1.39H6.712V11H5.267V6.706H1V5.314h4.267V1h1.446v4.314z\"></path>\r\n                </svg>\r\n              </span>\r\n              <span className=\"gwt-InlineLabel\">Add Upsell Products</span>\r\n            </button>\r\n          );\r\n        }}\r\n        position=\"center center\">\r\n        <PopupCustom></PopupCustom>\r\n      </Popup>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport \"./Products.scss\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport ProductPicker from \"./ProductPicker\";\r\nimport ProductItem from \"./ProductItem\";\r\nimport useStore from \"./store/store\";\r\n\r\nexport default function Products(props) {\r\n  const storeSubscriber = useRef(useStore.getState().products);\r\n\r\n  const populateProducts = useStore((state) => state.populateProducts);\r\n  const products = useStore((state) => state.products);\r\n\r\n  useEffect(\r\n    () =>\r\n      useStore.subscribe(\r\n        (products) => (storeSubscriber.current = products),\r\n        (state) => state.products,\r\n      ),\r\n    [],\r\n  );\r\n\r\n  useEffect(() => {\r\n    populateProducts();\r\n  }, []);\r\n\r\n  const ProductSkeleton = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"list-element list-element--compact list-element--has-hover list-element--inline-mode SkeletonLoader\">\r\n          <Skeleton count={1} height={50} />\r\n          <Skeleton count={3} height={7} />\r\n        </div>\r\n        <div className=\"list-element list-element--compact list-element--has-hover list-element--inline-mode SkeletonLoader\">\r\n          <Skeleton count={1} height={50} />\r\n          <Skeleton count={3} height={7} />\r\n        </div>\r\n        <div className=\"list-element list-element--compact list-element--has-hover list-element--inline-mode SkeletonLoader\">\r\n          <Skeleton count={1} height={50} />\r\n          <Skeleton count={3} height={7} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"Products  named-area\">\r\n      <div className=\"named-area__body\">\r\n        <div className=\"a-card a-card--compact\">\r\n          <div className=\"a-card__paddings\">\r\n            <h1 className=\"settings-page__title spacing--mt2\">Products</h1>\r\n\r\n            {products && products.hasOwnProperty(\"items\") ? (\r\n              products.items.map((e) => (\r\n                <ProductItem key={e.id} product={e}></ProductItem>\r\n              ))\r\n            ) : (\r\n              <ProductSkeleton></ProductSkeleton>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.scss\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport Products from \"./Products\";\n\nfunction App() {\n  const [storeData, setStoreData] = useState(null);\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    setStoreData(window.EcwidApp.getPayload());\n  }, []);\n\n  useEffect(() => {\n    console.log(\"rr my store data: \", storeData);\n  }, [storeData]);\n\n  return (\n    <div className=\"EasyUpsellApp\">\n      <Products></Products>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}