{"version":3,"sources":["Products.js","App.js","reportWebVitals.js","index.js"],"names":["Products","props","products","ProductSkeleton","Fragment","className","count","height","ProductsList","product","src","thumbnailUrl","alt","name","hasOwnProperty","items","map","e","id","App","useState","storeData","setStoreData","setProducts","populateProducts","a","url","store_id","access_token","axios","get","_products","data","useEffect","window","EcwidApp","getPayload","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAIe,SAASA,EAASC,GAAQ,IAC/BC,EAAaD,EAAbC,SAEFC,EAAkB,WACtB,OACE,eAAC,IAAMC,SAAP,WACE,sBAAKC,UAAU,sGAAf,UACE,cAAC,IAAD,CAAUC,MAAO,EAAGC,OAAQ,KAC5B,cAAC,IAAD,CAAUD,MAAO,EAAGC,OAAQ,OAE9B,sBAAKF,UAAU,sGAAf,UACE,cAAC,IAAD,CAAUC,MAAO,EAAGC,OAAQ,KAC5B,cAAC,IAAD,CAAUD,MAAO,EAAGC,OAAQ,OAE9B,sBAAKF,UAAU,sGAAf,UACE,cAAC,IAAD,CAAUC,MAAO,EAAGC,OAAQ,KAC5B,cAAC,IAAD,CAAUD,MAAO,EAAGC,OAAQ,WAM9BC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,sBAAKJ,UAAU,uFAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKK,IAAKD,EAAQE,aAAcC,IAAKH,EAAQI,SAE/C,qBAAKR,UAAU,wBAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,qBAAKA,UAAU,0BAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,+BAAOI,EAAQI,aAIrB,sBAAKR,UAAU,2BAAf,UACE,sBAAMA,UAAU,sBAAhB,6BACA,sBAAKA,UAAU,yBAAf,UACE,sBAAMA,UAAU,eAAhB,4BACA,sBAAMA,UAAU,eAAhB,2CASd,OACE,qBAAKA,UAAU,uBAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,yBAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,0CAECH,GAAYA,EAASY,eAAe,SACnCZ,EAASa,MAAMC,KAAI,SAACC,GAAD,OACjB,cAACT,EAAD,CAAyBC,QAASQ,GAAfA,EAAEC,OAGvB,cAACf,EAAD,aC3BCgB,MAjCf,WAAgB,IAAD,EACqBC,mBAAS,MAD9B,mBACNC,EADM,KACKC,EADL,OAEmBF,mBAAS,IAF5B,mBAENlB,EAFM,KAEIqB,EAFJ,KAIPC,EAAgB,uCAAG,gCAAAC,EAAA,6DACjBC,EACJL,GAAaA,EAAUP,eAAe,YAAtC,uCACoCO,EAAUM,SAD9C,2BACyEN,EAAUO,cADnF,+FAFqB,SAMWC,IAAMC,IAAIJ,GANrB,gBAMTK,EANS,EAMfC,KACRT,EAAYQ,GAPW,2CAAH,qDAsBtB,OAZAE,qBAAU,WACRX,EAAaY,OAAOC,SAASC,gBAC5B,IAEHH,qBAAU,WACR,sBAAC,sBAAAR,EAAA,sDACCD,IADD,0CAAD,GAIAa,QAAQC,IAAI,qBAAsBjB,KACjC,CAACA,IAGF,qBAAKhB,UAAU,gBAAf,SACE,cAAC,EAAD,CAAUH,SAAUA,OCtBXqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ecfad368.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Products.scss\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nexport default function Products(props) {\r\n  const { products } = props;\r\n\r\n  const ProductSkeleton = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"list-element list-element--compact list-element--has-hover list-element--inline-mode SkeletonLoader\">\r\n          <Skeleton count={1} height={50} />\r\n          <Skeleton count={3} height={7} />\r\n        </div>\r\n        <div className=\"list-element list-element--compact list-element--has-hover list-element--inline-mode SkeletonLoader\">\r\n          <Skeleton count={1} height={50} />\r\n          <Skeleton count={3} height={7} />\r\n        </div>\r\n        <div className=\"list-element list-element--compact list-element--has-hover list-element--inline-mode SkeletonLoader\">\r\n          <Skeleton count={1} height={50} />\r\n          <Skeleton count={3} height={7} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const ProductsList = ({ product }) => {\r\n    return (\r\n      <div className=\"list-element list-element--compact list-element--has-hover list-element--inline-mode\">\r\n        <div className=\"list-element__image\">\r\n          <img src={product.thumbnailUrl} alt={product.name} />\r\n        </div>\r\n        <div className=\"list-element__content\">\r\n          <div className=\"list-element__info\">\r\n            <div className=\"list-element__header\">\r\n              <div className=\"list-element__main-info\">\r\n                <div className=\"list-element__title\">\r\n                  <span>{product.name}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"list-element__status-row\">\r\n              <span className=\"order__date-wrapper\">Upsell Products</span>\r\n              <div className=\"list-element__data-row\">\r\n                <span className=\"spacing--mr1\">Cool product 1</span>\r\n                <span className=\"spacing--mr1\">Nice Product 2</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"Products  named-area\">\r\n      <div className=\"named-area__body\">\r\n        <div className=\"a-card a-card--compact\">\r\n          <div className=\"a-card__paddings\">\r\n            <h4>Products</h4>\r\n\r\n            {products && products.hasOwnProperty(\"items\") ? (\r\n              products.items.map((e) => (\r\n                <ProductsList key={e.id} product={e}></ProductsList>\r\n              ))\r\n            ) : (\r\n              <ProductSkeleton></ProductSkeleton>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.scss\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport Products from \"./Products\";\n\nfunction App() {\n  const [storeData, setStoreData] = useState(null);\n  const [products, setProducts] = useState([]);\n\n  const populateProducts = async () => {\n    const url =\n      storeData && storeData.hasOwnProperty(\"store_id\")\n        ? `https://app.ecwid.com/api/v3/${storeData.store_id}/products?token=${storeData.access_token}`\n        : `https://app.ecwid.com/api/v3/37374877/products?token=secret_EkQGe8SC4V4DHgSrnkmXsQsneDQ9JwQ4`;\n\n    const { data: _products } = await axios.get(url);\n    setProducts(_products);\n  };\n\n  useEffect(() => {\n    setStoreData(window.EcwidApp.getPayload());\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      populateProducts();\n    })();\n\n    console.log(\"rr my store data: \", storeData);\n  }, [storeData]);\n\n  return (\n    <div className=\"EasyUpsellApp\">\n      <Products products={products}></Products>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}